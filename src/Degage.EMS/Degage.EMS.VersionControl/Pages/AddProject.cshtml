@page
@model Degage.EMS.VersionControl.Pages.AddProjectModel
@{
}



<div id="app" style="display:flex;flex-flow:row;justify-content:center;flex:1;">
    <div style="display:flex;flex-flow:column;">
        <el-form ref="form" :model="projectInfo" label-width="80px" style="width:400px;">
            <el-form-item label="项目标题">
                <el-input v-model="projectInfo.@nameof(ProjectInfo.Title)"></el-input>
            </el-form-item>
            <el-form-item label="项目描述">
                <el-input type="textarea" v-model="projectInfo.@nameof(ProjectInfo.Description)"></el-input>
            </el-form-item>
            <el-form-item label="项目图标">
                <el-upload class="avatar-uploader"
                           action="/file/upload"
                           :show-file-list="false"
                           :on-success="handleIconSuccess"
                           :before-upload="beforeIconUpload">
                    <img v-if="iconUrl" :src="iconUrl" class="avatar">
                    <i v-else class="el-icon-plus avatar-uploader-icon"></i>
                </el-upload>
            </el-form-item>
        </el-form>
        <div>
            <div style="float:right;">
                <el-button v-on:click="dialogCancelHandle">取 消</el-button>
                <el-button type="primary" v-on:click="dialogConfirmHandle">保 存</el-button>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
<script>
    var app = new Vue({
        el: "#app",
        data:
        {
            projectInfo: new ProjectInfo(),
            iconUrl: null
        },
        methods:
        {
            dialogCancelHandle: function () {
                window.top.closeIndexDialog();
            },
            dialogConfirmHandle: async function () {
                var resp = await $proxy.addProjectInfo(this.projectInfo);
                var pack = new ResponsePacket(resp.data);
                if (pack.Success) {
                    var projectInfo = new ProjectInfo(pack.Data);
                    window.top.addProjectInfo(projectInfo);
                    $msgbox.defaultShowSuccess("添加成功");
                      window.top.closeIndexDialog();
                }
                else {
                    $msgbox.defaultShowFailed("添加失败！" + pack.Message);    
                }
            },
            handleIconSuccess: function (res, file) {
                var avatarId = res;
                this.projectInfo.IconFileId = avatarId;
                this.iconUrl = URL.createObjectURL(file.raw);
            },
            beforeIconUpload: function (file) {
                const isJPGOrPNG = file.type === 'image/jpeg' || file.type === 'image/png';
                const isLt2M = file.size / 1024 / 1024 < 2;

                if (!isJPGOrPNG) {
                    this.$message.error('项目图标只能是 JPG 或 PNG 格式！');
                }
                if (!isLt2M) {
                    this.$message.error('项目图标大小不能超过 2MB!');
                }
                return isJPGOrPNG && isLt2M;
            }
        }
    });
</script>
}


@section Contents
{
<style>
    .avatar-uploader .el-upload {
        border: 1px dashed #d9d9d9;
        border-radius: 6px;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

        .avatar-uploader .el-upload:hover {
            border-color: #409EFF;
        }

    .avatar-uploader-icon {
        font-size: 28px;
        color: #8c939d;
        width: 100px;
        height: 100px;
        line-height: 100px;
        text-align: center;
    }

    .avatar {
        width: 100px;
        height: 100px;
        display: block;
    }
</style>

}

